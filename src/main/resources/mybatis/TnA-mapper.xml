<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="TnA">
  	<select id="selectByID" resultType="kh.gw.dto.TnADTO">
  		select * from st.TnA where TnA_id = #{id}
  	</select>
  	
  	<insert id="attendanceInput">
  		insert into st.tna values(st.tna_seq.nextval, #{tna_id}, (SELECT CURRENT_DATE FROM DUAL), null, #{tna_start_status_code}, null)
  	</insert>
  	<update id="leaveWorkInput">
  		update st.TnA set tna_end_time = (SELECT CURRENT_DATE FROM DUAL), tna_end_status_code = #{tna_end_status_code} where tna_seq = #{tna_seq}
  	</update>
  	<select id="getTnaSeq" resultType="Integer">
  		select tna_seq from st.tna where (tna_id = #{sessionId}) and (to_char((SELECT CURRENT_DATE FROM DUAL),'yyyymmdd') like to_char(tna_start_time,'yyyymmdd'))
  	</select>
  	<select id="getAttendanceTime" resultType="java.util.Date">
  		select tna_start_time from st.tna where (tna_id = #{sessionId}) and (to_char((SELECT CURRENT_DATE FROM DUAL),'yyyymmdd') like to_char(tna_start_time,'yyyymmdd'))
  	</select>
  	<select id="getLeaveWorkTime" resultType="java.util.Date">
  		select tna_end_time from st.tna where (tna_id = #{sessionId}) and (to_char((SELECT CURRENT_DATE FROM DUAL),'yyyymmdd') like to_char(tna_end_time,'yyyymmdd'))
  	</select>
  	<select id="getTnaCalendarList" resultType="java.util.HashMap">
  		select t.tna_seq, t.tna_id, t.tna_start_time, t.tna_end_time, t.tna_start_status_code, t.tna_end_status_code, s1.tna_status_name"TNA_START_STATUS_NAME", s2.tna_status_name"TNA_END_STATUS_NAME" 
		from st.tna t left join st.tna_status s1
		on (t.TNA_START_STATUS_CODE = s1.tna_status_code)
		left join st.tna_status s2 
		on (t.TNA_END_STATUS_CODE = s2.tna_status_code) where (t.tna_id = #{sessionId})
		order by t.tna_seq
	</select>
  	<select id="getTnaCalendarValue" resultType="java.util.HashMap">
  		select t.tna_seq, t.tna_id, t.tna_start_time, t.tna_end_time, t.tna_start_status_code, t.tna_end_status_code, s1.tna_status_name"TNA_START_STATUS_NAME", s2.tna_status_name"TNA_END_STATUS_NAME" 
		from st.tna t left join st.tna_status s1
		on (t.TNA_START_STATUS_CODE = s1.tna_status_code)
		left join st.tna_status s2 
		on (t.TNA_END_STATUS_CODE = s2.tna_status_code) where (t.tna_id = #{sessionId}) and (t.tna_seq = #{tna_seq})
		order by t.tna_seq
	</select>
	<select id="getTnaStatusList" resultType="kh.gw.dto.TnA_statusDTO">
		select * from st.tna_status
	</select>
	<insert id="tnaFixRequestInput">
		insert into st.tna_objection values(st.tna_obj_seq.nextval, #{tna_obj_reason}, #{tna_obj_id}, (SELECT CURRENT_DATE FROM DUAL), #{tna_obj_changed_code}, #{tna_seq}, #{tna_obj_status}, #{tna_obj_proc_status_code}, #{tna_obj_ori_status_code}, #{tna_obj_time})
	</insert>
	<select id="tnaCheckOverlap" resultType="java.util.HashMap">
		select * from st.tna_objection where (tna_seq = #{tna_seq}) and (tna_obj_status = #{tna_obj_status})
	</select>
	<select id="getTnaStartCountList" resultType="java.util.HashMap">
		select to_char(tna_start_time, 'mm')"DATE",tna_start_status_code,count(*)"COUNTING" from st.tna where (tna_id = #{sessionId}) and (to_char(tna_start_time, 'yyyy-mm') like (#{selectYearValue}||'%')) group by to_char(tna_start_time, 'mm'),tna_start_status_code
	</select>
	<select id="getTnaStartCountSumList" resultType="java.util.HashMap">
		select tna_start_status_code,count(*)"COUNTING" from st.tna where (tna_id = #{sessionId}) and (to_char(tna_start_time, 'yyyy-mm') like (#{selectYearValue}||'%')) group by tna_start_status_code
	</select>
	<select id="getTnaEndCountList" resultType="java.util.HashMap">
		select to_char(tna_end_time, 'mm')"DATE",tna_end_status_code,count(*)"COUNTING" from st.tna where (tna_id = #{sessionId}) and (to_char(tna_end_time, 'yyyy-mm') like (#{selectYearValue}||'%')) group by to_char(tna_end_time, 'mm'),tna_end_status_code
	</select>
	<select id="getTnaEndCountSumList" resultType="java.util.HashMap">
		select tna_end_status_code,count(*)"COUNTING" from st.tna where (tna_id = #{sessionId}) and (to_char(tna_end_time, 'yyyy-mm') like (#{selectYearValue}||'%')) group by tna_end_status_code
	</select>
	<select id="getTnaSelectYearList" resultType="java.util.HashMap">
		select to_char(tna_start_time, 'yyyy')"DATE" from st.tna where (tna_id = #{sessionId}) group by to_char(tna_start_time, 'yyyy') order by 1
	</select>
	<select id="getTnaFixRequestList" resultType="java.util.HashMap">
		select * from 
		(select a.*, row_number() over(order by a.tna_obj_seq desc)rn from (select objt.TNA_OBJ_SEQ, objt.TNA_OBJ_REASON, objt.TNA_OBJ_ID, objt.tna_obj_reg_date, objt.TNA_OBJ_CHANGED_CODE, stlist.TNA_STATUS_NAME, objt.tna_seq, objt.tna_obj_status, objt.TnA_obj_ori_status_code, stlist2.TNA_STATUS_NAME"TNA_ORI_STATUS_NAME", objt.TnA_obj_time, objt.tna_obj_proc_status_code, stat.TNA_OBJ_PROC_STATUS_NAME from st.tna_objection objt, st.tna_obj_proc_status stat, st.tna_status stlist, st.tna_status stlist2 where (objt.tna_obj_id = #{sessionId}) and (objt.tna_obj_proc_status_code = stat.TNA_OBJ_PROC_STATUS_CODE) and (objt.tna_obj_changed_code = stlist.TNA_STATUS_CODE) and (objt.TnA_obj_ori_status_code = stlist2.TNA_STATUS_CODE))
		a)
		where (rn between #{startRowNum} and #{endRowNum})
	</select>
	<select id="getTnaFixRequestListAll" resultType="java.util.HashMap">
		select * from 
		(select a.*, row_number() over(order by a.tna_obj_seq desc)rn from (select * from st.tna_objection obj where (obj.tna_obj_id = #{sessionId}))
		a)
	</select>
  	
  	<select id="tnaHistory" resultType="java.util.HashMap">
  		select * from 
		(select a.*, row_number() over(order by a.tna_obj_seq desc)rn from (select objt.TNA_OBJ_SEQ, objt.TNA_OBJ_REASON, objt.TNA_OBJ_ID, objt.tna_obj_reg_date, objt.TNA_OBJ_CHANGED_CODE, stlist.TNA_STATUS_NAME, objt.tna_seq, objt.tna_obj_status, objt.TnA_obj_ori_status_code, stlist2.TNA_STATUS_NAME"TNA_ORI_STATUS_NAME", objt.TnA_obj_time, objt.tna_obj_proc_status_code, stat.TNA_OBJ_PROC_STATUS_NAME,m.dept_code,m.position_code,d.dept_name,p.position_name,m.name from st.tna_objection objt, st.tna_obj_proc_status stat, st.tna_status stlist, st.tna_status stlist2, st.member m, st.position p, st.department d where (objt.tna_obj_id=m.id) and (m.dept_code=d.dept_code) and (m.position_code = p.position_code) and (objt.tna_obj_proc_status_code = stat.TNA_OBJ_PROC_STATUS_CODE) and (objt.tna_obj_changed_code = stlist.TNA_STATUS_CODE) and (objt.TnA_obj_ori_status_code = stlist2.TNA_STATUS_CODE))
		a)
  	</select>
  	
  	<update id="tnaStartApp">
  		update st.tna set tna_start_status_code = #{finalChange} where tna_seq=#{tnaSeq}
  	</update>
  	
  	<update id="tnaEndApp">
  		update st.tna set tna_end_status_code = #{finalChange} where tna_seq=#{tnaSeq}
  	</update>
  	
  	<update id="objApproval">
  		update st.tna_objection set tna_obj_proc_status_code = #{statusCode} where tna_obj_seq = #{objSeq}
  	</update>
  	
  </mapper>